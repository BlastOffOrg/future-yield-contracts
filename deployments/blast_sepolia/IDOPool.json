{
  "address": "0xcbeC83A24D8AA4AAE56B0c4f04870cb28C31cFc9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token_",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ExceededMaxStake",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "lock",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_lock",
          "type": "bool"
        }
      ],
      "name": "setLock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_max",
          "type": "uint256"
        }
      ],
      "name": "setMaxStaked",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "setToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x6b9cb34f97d8b09e1a3c43cb43bb85f190453ad6ba9d9cb92a65f974f87cdca2",
  "receipt": {
    "to": null,
    "from": "0x482bE3Ec3A24eE4FEc390576473dbc9DaD2E6d66",
    "contractAddress": "0xcbeC83A24D8AA4AAE56B0c4f04870cb28C31cFc9",
    "transactionIndex": 3,
    "gasUsed": "1008529",
    "logsBloom": "0x
    "blockHash": "0x60e38f9e50c25096c9dd9f4c424fe725e552511d5464e9c2dab2bf73722fe045",
    "transactionHash": "0x6b9cb34f97d8b09e1a3c43cb43bb85f190453ad6ba9d9cb92a65f974f87cdca2",
    "logs": [
      {
        "transactionIndex": 3,
        "blockNumber": 1033223,
        "transactionHash": "0x6b9cb34f97d8b09e1a3c43cb43bb85f190453ad6ba9d9cb92a65f974f87cdca2",
        "address": "0xcbeC83A24D8AA4AAE56B0c4f04870cb28C31cFc9",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000482be3ec3a24ee4fec390576473dbc9dad2e6d66"
        ],
        "data": "0x",
        "logIndex": 2,
        "blockHash": "0x60e38f9e50c25096c9dd9f4c424fe725e552511d5464e9c2dab2bf73722fe045"
      }
    ],
    "blockNumber": 1033223,
    "cumulativeGasUsed": "1196054",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xcAdc85a9D5FC31eee3806bfd658C744365082C5f",
    "Hydrogen IDO"
  ],
  "numDeployments": 1,
  "solcInputHash": "5e5774da99b38859efa0bb08897be10a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ExceededMaxStake\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"lock\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_lock\",\"type\":\"bool\"}],\"name\":\"setLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_max\",\"type\":\"uint256\"}],\"name\":\"setMaxStaked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IDOPool.sol\":\"IDOPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/IDOPool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract IDOPool is Ownable {\\n  error ExceededMaxStake();\\n\\n  IERC20 public token;\\n  string public name;\\n  bool public lock;\\n\\n  mapping(address => uint256) public stakedAmount;\\n  uint256 public totalStaked;\\n  uint256 public maxStaked = 1000 * 10**18;\\n\\n  modifier locked() {\\n    require(lock, \\\"Not Locked\\\");\\n    _;\\n  }\\n\\n  modifier notLocked() {\\n    require(!lock, \\\"Locked\\\");\\n    _;\\n  }\\n\\n  constructor(address token_, string memory name_) Ownable(msg.sender) {\\n    token = IERC20(token_);\\n    name = name_;\\n    lock = true;\\n  }\\n\\n  function setToken(address _token) external onlyOwner {\\n    token = IERC20(_token);\\n  }\\n\\n  function setMaxStaked(uint256 _max) external onlyOwner {\\n    maxStaked = _max;\\n  }\\n\\n  function setLock(bool _lock) external onlyOwner {\\n    lock = _lock;\\n  }\\n\\n  function stake(uint256 amount) external locked {\\n    stakedAmount[msg.sender] = stakedAmount[msg.sender] + amount;\\n    totalStaked = totalStaked + amount;\\n    if (totalStaked > maxStaked) revert ExceededMaxStake(); \\n\\n    token.transferFrom(msg.sender, address(this), amount);\\n  }\\n\\n  function unstake() external notLocked {\\n    uint256 staked = stakedAmount[msg.sender];\\n    stakedAmount[msg.sender] = 0;\\n\\n    token.transfer(msg.sender, staked);\\n  }\\n}\\n\",\"keccak256\":\"0xeaa4459f716cc3e23e7979a9b6593dfce870d9a42614c0baf6620b5ffa208558\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052683635c9adc5dea000006006553480156200001e57600080fd5b5060405162001691380380620016918339818101604052810190620000449190620003fe565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ba5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000b1919062000475565b60405180910390fd5b620000cb816200014260201b60201c565b5081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600290816200011e9190620006dd565b506001600360006101000a81548160ff0219169083151502179055505050620007c4565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000247826200021a565b9050919050565b62000259816200023a565b81146200026557600080fd5b50565b60008151905062000279816200024e565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620002d48262000289565b810181811067ffffffffffffffff82111715620002f657620002f56200029a565b5b80604052505050565b60006200030b62000206565b9050620003198282620002c9565b919050565b600067ffffffffffffffff8211156200033c576200033b6200029a565b5b620003478262000289565b9050602081019050919050565b60005b838110156200037457808201518184015260208101905062000357565b60008484015250505050565b60006200039762000391846200031e565b620002ff565b905082815260208101848484011115620003b657620003b562000284565b5b620003c384828562000354565b509392505050565b600082601f830112620003e357620003e26200027f565b5b8151620003f584826020860162000380565b91505092915050565b6000806040838503121562000418576200041762000210565b5b6000620004288582860162000268565b925050602083015167ffffffffffffffff8111156200044c576200044b62000215565b5b6200045a85828601620003cb565b9150509250929050565b6200046f816200023a565b82525050565b60006020820190506200048c600083018462000464565b92915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620004e557607f821691505b602082108103620004fb57620004fa6200049d565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005657fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000526565b62000571868362000526565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620005be620005b8620005b28462000589565b62000593565b62000589565b9050919050565b6000819050919050565b620005da836200059d565b620005f2620005e982620005c5565b84845462000533565b825550505050565b600090565b62000609620005fa565b62000616818484620005cf565b505050565b5b818110156200063e5762000632600082620005ff565b6001810190506200061c565b5050565b601f8211156200068d57620006578162000501565b620006628462000516565b8101602085101562000672578190505b6200068a620006818562000516565b8301826200061b565b50505b505050565b600082821c905092915050565b6000620006b26000198460080262000692565b1980831691505092915050565b6000620006cd83836200069f565b9150826002028217905092915050565b620006e88262000492565b67ffffffffffffffff8111156200070457620007036200029a565b5b620007108254620004cc565b6200071d82828562000642565b600060209050601f83116001811462000755576000841562000740578287015190505b6200074c8582620006bf565b865550620007bc565b601f198416620007658662000501565b60005b828110156200078f5784890151825560018201915060208501945060208101905062000768565b86831015620007af5784890151620007ab601f8916826200069f565b8355505b6001600288020188555050505b505050505050565b610ebd80620007d46000396000f3fe608060405234801561001057600080fd5b50600436106100e95760003560e01c8063817b1cd21161008c578063f2fde38b11610066578063f2fde38b146101ea578063f83d08ba14610206578063f993185514610224578063fc0c546a14610254576100e9565b8063817b1cd2146101925780638da5cb5b146101b0578063a694fc3a146101ce576100e9565b8063144fa6d7116100c8578063144fa6d7146101465780632def662014610162578063619d51941461016c578063715018a614610188576100e9565b80623cca93146100ee57806306fdde031461010c578063095feb801461012a575b600080fd5b6100f6610272565b6040516101039190610961565b60405180910390f35b610114610278565b6040516101219190610a0c565b60405180910390f35b610144600480360381019061013f9190610a5f565b610306565b005b610160600480360381019061015b9190610aea565b610318565b005b61016a610364565b005b61018660048036038101906101819190610b4f565b6104e1565b005b610190610506565b005b61019a61051a565b6040516101a79190610961565b60405180910390f35b6101b8610520565b6040516101c59190610b8b565b60405180910390f35b6101e860048036038101906101e39190610a5f565b610549565b005b61020460048036038101906101ff9190610aea565b61071e565b005b61020e6107a4565b60405161021b9190610bb5565b60405180910390f35b61023e60048036038101906102399190610aea565b6107b7565b60405161024b9190610961565b60405180910390f35b61025c6107cf565b6040516102699190610c2f565b60405180910390f35b60065481565b6002805461028590610c79565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610c79565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b505050505081565b61030e6107f5565b8060068190555050565b6103206107f5565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900460ff16156103b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab90610cf6565b60405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161049a929190610d16565b6020604051808303816000875af11580156104b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104dd9190610d54565b5050565b6104e96107f5565b80600360006101000a81548160ff02191690831515021790555050565b61050e6107f5565b610518600061087c565b565b60055481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900460ff16610598576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058f90610dcd565b60405180910390fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105e39190610e1c565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806005546106349190610e1c565b6005819055506006546005541115610678576040517f5f1fedbb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016106d793929190610e50565b6020604051808303816000875af11580156106f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071a9190610d54565b5050565b6107266107f5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107985760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161078f9190610b8b565b60405180910390fd5b6107a18161087c565b50565b600360009054906101000a900460ff1681565b60046020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6107fd610940565b73ffffffffffffffffffffffffffffffffffffffff1661081b610520565b73ffffffffffffffffffffffffffffffffffffffff161461087a5761083e610940565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108719190610b8b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b61095b81610948565b82525050565b60006020820190506109766000830184610952565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156109b657808201518184015260208101905061099b565b60008484015250505050565b6000601f19601f8301169050919050565b60006109de8261097c565b6109e88185610987565b93506109f8818560208601610998565b610a01816109c2565b840191505092915050565b60006020820190508181036000830152610a2681846109d3565b905092915050565b600080fd5b610a3c81610948565b8114610a4757600080fd5b50565b600081359050610a5981610a33565b92915050565b600060208284031215610a7557610a74610a2e565b5b6000610a8384828501610a4a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ab782610a8c565b9050919050565b610ac781610aac565b8114610ad257600080fd5b50565b600081359050610ae481610abe565b92915050565b600060208284031215610b0057610aff610a2e565b5b6000610b0e84828501610ad5565b91505092915050565b60008115159050919050565b610b2c81610b17565b8114610b3757600080fd5b50565b600081359050610b4981610b23565b92915050565b600060208284031215610b6557610b64610a2e565b5b6000610b7384828501610b3a565b91505092915050565b610b8581610aac565b82525050565b6000602082019050610ba06000830184610b7c565b92915050565b610baf81610b17565b82525050565b6000602082019050610bca6000830184610ba6565b92915050565b6000819050919050565b6000610bf5610bf0610beb84610a8c565b610bd0565b610a8c565b9050919050565b6000610c0782610bda565b9050919050565b6000610c1982610bfc565b9050919050565b610c2981610c0e565b82525050565b6000602082019050610c446000830184610c20565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610c9157607f821691505b602082108103610ca457610ca3610c4a565b5b50919050565b7f4c6f636b65640000000000000000000000000000000000000000000000000000600082015250565b6000610ce0600683610987565b9150610ceb82610caa565b602082019050919050565b60006020820190508181036000830152610d0f81610cd3565b9050919050565b6000604082019050610d2b6000830185610b7c565b610d386020830184610952565b9392505050565b600081519050610d4e81610b23565b92915050565b600060208284031215610d6a57610d69610a2e565b5b6000610d7884828501610d3f565b91505092915050565b7f4e6f74204c6f636b656400000000000000000000000000000000000000000000600082015250565b6000610db7600a83610987565b9150610dc282610d81565b602082019050919050565b60006020820190508181036000830152610de681610daa565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e2782610948565b9150610e3283610948565b9250828201905080821115610e4a57610e49610ded565b5b92915050565b6000606082019050610e656000830186610b7c565b610e726020830185610b7c565b610e7f6040830184610952565b94935050505056fea264697066735822122074c77466e08db0896dfe5cf9b87316e40f6f33b6d1ae2495fea1bf84e2a018b564736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100e95760003560e01c8063817b1cd21161008c578063f2fde38b11610066578063f2fde38b146101ea578063f83d08ba14610206578063f993185514610224578063fc0c546a14610254576100e9565b8063817b1cd2146101925780638da5cb5b146101b0578063a694fc3a146101ce576100e9565b8063144fa6d7116100c8578063144fa6d7146101465780632def662014610162578063619d51941461016c578063715018a614610188576100e9565b80623cca93146100ee57806306fdde031461010c578063095feb801461012a575b600080fd5b6100f6610272565b6040516101039190610961565b60405180910390f35b610114610278565b6040516101219190610a0c565b60405180910390f35b610144600480360381019061013f9190610a5f565b610306565b005b610160600480360381019061015b9190610aea565b610318565b005b61016a610364565b005b61018660048036038101906101819190610b4f565b6104e1565b005b610190610506565b005b61019a61051a565b6040516101a79190610961565b60405180910390f35b6101b8610520565b6040516101c59190610b8b565b60405180910390f35b6101e860048036038101906101e39190610a5f565b610549565b005b61020460048036038101906101ff9190610aea565b61071e565b005b61020e6107a4565b60405161021b9190610bb5565b60405180910390f35b61023e60048036038101906102399190610aea565b6107b7565b60405161024b9190610961565b60405180910390f35b61025c6107cf565b6040516102699190610c2f565b60405180910390f35b60065481565b6002805461028590610c79565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610c79565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b505050505081565b61030e6107f5565b8060068190555050565b6103206107f5565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900460ff16156103b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab90610cf6565b60405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161049a929190610d16565b6020604051808303816000875af11580156104b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104dd9190610d54565b5050565b6104e96107f5565b80600360006101000a81548160ff02191690831515021790555050565b61050e6107f5565b610518600061087c565b565b60055481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900460ff16610598576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058f90610dcd565b60405180910390fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105e39190610e1c565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806005546106349190610e1c565b6005819055506006546005541115610678576040517f5f1fedbb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016106d793929190610e50565b6020604051808303816000875af11580156106f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071a9190610d54565b5050565b6107266107f5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107985760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161078f9190610b8b565b60405180910390fd5b6107a18161087c565b50565b600360009054906101000a900460ff1681565b60046020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6107fd610940565b73ffffffffffffffffffffffffffffffffffffffff1661081b610520565b73ffffffffffffffffffffffffffffffffffffffff161461087a5761083e610940565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108719190610b8b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b61095b81610948565b82525050565b60006020820190506109766000830184610952565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156109b657808201518184015260208101905061099b565b60008484015250505050565b6000601f19601f8301169050919050565b60006109de8261097c565b6109e88185610987565b93506109f8818560208601610998565b610a01816109c2565b840191505092915050565b60006020820190508181036000830152610a2681846109d3565b905092915050565b600080fd5b610a3c81610948565b8114610a4757600080fd5b50565b600081359050610a5981610a33565b92915050565b600060208284031215610a7557610a74610a2e565b5b6000610a8384828501610a4a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ab782610a8c565b9050919050565b610ac781610aac565b8114610ad257600080fd5b50565b600081359050610ae481610abe565b92915050565b600060208284031215610b0057610aff610a2e565b5b6000610b0e84828501610ad5565b91505092915050565b60008115159050919050565b610b2c81610b17565b8114610b3757600080fd5b50565b600081359050610b4981610b23565b92915050565b600060208284031215610b6557610b64610a2e565b5b6000610b7384828501610b3a565b91505092915050565b610b8581610aac565b82525050565b6000602082019050610ba06000830184610b7c565b92915050565b610baf81610b17565b82525050565b6000602082019050610bca6000830184610ba6565b92915050565b6000819050919050565b6000610bf5610bf0610beb84610a8c565b610bd0565b610a8c565b9050919050565b6000610c0782610bda565b9050919050565b6000610c1982610bfc565b9050919050565b610c2981610c0e565b82525050565b6000602082019050610c446000830184610c20565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610c9157607f821691505b602082108103610ca457610ca3610c4a565b5b50919050565b7f4c6f636b65640000000000000000000000000000000000000000000000000000600082015250565b6000610ce0600683610987565b9150610ceb82610caa565b602082019050919050565b60006020820190508181036000830152610d0f81610cd3565b9050919050565b6000604082019050610d2b6000830185610b7c565b610d386020830184610952565b9392505050565b600081519050610d4e81610b23565b92915050565b600060208284031215610d6a57610d69610a2e565b5b6000610d7884828501610d3f565b91505092915050565b7f4e6f74204c6f636b656400000000000000000000000000000000000000000000600082015250565b6000610db7600a83610987565b9150610dc282610d81565b602082019050919050565b60006020820190508181036000830152610de681610daa565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e2782610948565b9150610e3283610948565b9250828201905080821115610e4a57610e49610ded565b5b92915050565b6000606082019050610e656000830186610b7c565b610e726020830185610b7c565b610e7f6040830184610952565b94935050505056fea264697066735822122074c77466e08db0896dfe5cf9b87316e40f6f33b6d1ae2495fea1bf84e2a018b564736f6c63430008140033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/IDOPool.sol:IDOPool",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 266,
        "contract": "contracts/IDOPool.sol:IDOPool",
        "label": "token",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)225"
      },
      {
        "astId": 268,
        "contract": "contracts/IDOPool.sol:IDOPool",
        "label": "name",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      },
      {
        "astId": 270,
        "contract": "contracts/IDOPool.sol:IDOPool",
        "label": "lock",
        "offset": 0,
        "slot": "3",
        "type": "t_bool"
      },
      {
        "astId": 274,
        "contract": "contracts/IDOPool.sol:IDOPool",
        "label": "stakedAmount",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 276,
        "contract": "contracts/IDOPool.sol:IDOPool",
        "label": "totalStaked",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 283,
        "contract": "contracts/IDOPool.sol:IDOPool",
        "label": "maxStaked",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)225": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}